<div class="p-4 sm:p-6 lg:p-8">
  <header class="mb-8">
    <div>
      <h1 class="text-3xl font-bold text-slate-900">Dashboard de Gestão de Qualidade</h1>
      <p class="text-slate-600 mt-1">Acompanhe e gerencie as avaliações negativas de forma centralizada e eficiente.</p>
    </div>
  </header>

  <main>
    <!-- KPIs -->
    <section class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-6 gap-3 mb-8">
      <div class="bg-white p-3 rounded-xl shadow-sm border border-slate-200">
        <h3 class="text-xs font-medium text-slate-500">Total</h3>
        <%= link_to quality_cases_path, class: "block" do %>
          <p class="text-xl font-bold text-slate-900 mt-2 hover:text-slate-700 cursor-pointer"><%= @kpis[:total] %></p>
        <% end %>
      </div>
      <div class="bg-white p-3 rounded-xl shadow-sm border border-slate-200">
        <h3 class="text-xs font-medium text-slate-500">Novos</h3>
        <%= link_to quality_cases_path(status: "Novo"), class: "block" do %>
          <p class="text-xl font-bold text-blue-600 mt-2 hover:text-blue-500 cursor-pointer"><%= @kpis[:novo] %></p>
        <% end %>
      </div>
      <div class="bg-white p-3 rounded-xl shadow-sm border border-slate-200">
        <h3 class="text-xs font-medium text-slate-500">Aguardando Contato</h3>
        <%= link_to quality_cases_path(status: "Aguardando Contato"), class: "block" do %>
          <p class="text-xl font-bold text-yellow-600 mt-2 hover:text-yellow-500 cursor-pointer"><%= @kpis[:aguardando_contato] %></p>
        <% end %>
      </div>
      <div class="bg-white p-3 rounded-xl shadow-sm border border-slate-200">
        <h3 class="text-xs font-medium text-slate-500">Em Análise</h3>
        <%= link_to quality_cases_path(status: "Em análise pela Qualidade"), class: "block" do %>
          <p class="text-xl font-bold text-amber-600 mt-2 hover:text-amber-500 cursor-pointer"><%= @kpis[:em_analise] %></p>
        <% end %>
      </div>
      <div class="bg-white p-3 rounded-xl shadow-sm border border-slate-200">
        <h3 class="text-xs font-medium text-slate-500">Aguardando Retorno</h3>
        <%= link_to quality_cases_path(status: "Aguardando retorno ao cliente"), class: "block" do %>
          <p class="text-xl font-bold text-teal-600 mt-2 hover:text-teal-500 cursor-pointer"><%= @kpis[:aguardando_retorno] %></p>
        <% end %>
      </div>
      <div class="bg-white p-3 rounded-xl shadow-sm border border-slate-200">
        <h3 class="text-xs font-medium text-slate-500">Concluídos</h3>
        <%= link_to quality_cases_path(status: "Concluído"), class: "block" do %>
          <p class="text-xl font-bold text-emerald-600 mt-2 hover:text-emerald-500 cursor-pointer"><%= @kpis[:concluidos] %></p>
        <% end %>
      </div>
    </section>

    <!-- Cases Section -->
        <!-- Cases Section -->
    <section class="bg-white shadow-lg rounded-xl border border-gray-200 mb-8">
      <header class="p-6 border-b border-gray-200">
        <div class="flex justify-between items-center mb-4">
          <h2 class="text-2xl font-bold tracking-tight text-gray-900">Registros de Avaliações</h2>
          <% if params[:status].present? || params[:tecnico].present? %>
            <%= link_to "Limpar filtros", quality_cases_path, class: "text-sm text-gray-600 hover:text-gray-900" %>
          <% end %>
        </div>

        <!-- Filtros -->
        <%= form_with url: quality_cases_path, method: :get, local: true, class: "flex flex-wrap gap-4 items-end" do |form| %>
          <div>
            <%= form.label :tecnico, "Técnico", class: "block text-sm font-medium text-gray-700 mb-1" %>
            <%= form.select :tecnico, options_for_select([["Todos os Técnicos", ""]] + @tecnicos.map { |t| [t, t] }, params[:tecnico]), 
                           {}, { class: "border border-gray-300 rounded-md px-3 py-2 text-sm focus:ring-1 focus:ring-gray-500 focus:border-gray-500", onchange: "this.form.submit();" } %>
          </div>
          <div>
            <%= form.label :status, "Status", class: "block text-sm font-medium text-gray-700 mb-1" %>
            <%= form.select :status, options_for_select([["Todos os Status", ""]] + QualityCase.statuses.keys.map { |s| [s, s] }, params[:status]), 
                           {}, { class: "border border-gray-300 rounded-md px-3 py-2 text-sm focus:ring-1 focus:ring-gray-500 focus:border-gray-500", onchange: "this.form.submit();" } %>
          </div>
        <% end %>
      </header>

      <div class="p-6">
        <div class="grid grid-cols-1 md:grid-cols-2 xl:grid-cols-3 gap-6">
          <% @quality_cases.each do |quality_case| %>
            <div class="bg-white rounded-lg shadow-md border <%= status_border_color(quality_case.status) %> p-5 flex flex-col hover:shadow-xl hover:-translate-y-1 transition-all duration-300">
              <div class="flex justify-between items-start mb-3">
                <h3 class="font-bold text-slate-900"><%= quality_case.numero_chamado %></h3>
                <%= link_to "Excluir", quality_case_path(quality_case), class: "text-xs text-slate-400 hover:text-red-600 transition-colors", data: { controller: "confirm", action: "click->confirm#confirm", confirm_message: "Deseja remover a avaliação do chamado #{quality_case.numero_chamado}?", turbo_method: "delete" } %>
              </div>
              
              <div class="flex items-center justify-between gap-2 mb-4 h-5">
                <div>
                  <% if quality_case.status == "Aguardando contato" && quality_case.contato_started_at %>
                    <span class="text-xs px-2 py-2 bg-yellow-100 text-yellow-700 rounded border-2 border-current w-28 h-8 flex items-center justify-center timer-element" data-start-time="<%= quality_case.contato_started_at.to_i %>">
                      ⏱ 00:00
                    </span>
                  <% elsif quality_case.status == "Em análise pela Qualidade" && quality_case.analise_started_at %>
                    <span class="text-xs px-2 py-2 bg-amber-100 text-amber-700 rounded border-2 border-current w-28 h-8 flex items-center justify-center timer-element" data-start-time="<%= quality_case.analise_started_at.to_i %>">
                      ⏱ 00:00
                    </span>
                  <% end %>
                </div>
                <div class="bg-gray-50 border-2 border-gray-400 rounded px-2 py-2 w-36 h-8 flex items-center justify-center status-container" data-start-time="<%= quality_case.contato_started_at&.to_i || quality_case.analise_started_at&.to_i %>">
                  <p class="text-xs text-gray-800 status-text"><%= quality_case.status %></p>
                </div>
              </div>
              <p class="text-sm text-slate-500 mb-1">Cliente: <%= quality_case.cliente %></p>
              <p class="text-sm text-slate-500 mb-1">Técnico: <%= quality_case.tecnico %></p>
              <p class="text-sm text-slate-500 mb-1">Auditor: <%= quality_case.auditor&.nome || 'Não definido' %></p>
              <p class="text-sm text-slate-500 mb-1">Contatos: <%= quality_case.contacts.count %></p>
              <p class="text-sm text-slate-700 bg-slate-50 p-3 rounded-md mb-4 h-24 overflow-y-auto">
                <strong>Insatisfação:</strong> <%= quality_case.insatisfacao_cliente %>
              </p>
              

              <div class="flex justify-end gap-2 mt-auto">
                  <% case quality_case.status %>
                  <% when "Novo" %>
                    <%= link_to "Alterar", edit_quality_case_path(quality_case), 
                               class: "text-sm font-medium text-blue-600 hover:text-blue-800" %>
                  <% when "Aguardando contato" %>
                    <%= link_to "Contato", realizar_contato_quality_case_path(quality_case), 
                               class: "text-sm font-medium text-gray-600 hover:text-green-600" %>
                  <% when "Em análise pela Qualidade" %>
                    <%= link_to "Analisar", realizar_analise_quality_case_path(quality_case), 
                               class: "text-sm font-medium text-purple-600 hover:text-purple-800" %>
                  <% when "Aguardando aprovação do gestor" %>
                    <% if current_operator.funcao == 'Gestor' && quality_case.team_id == current_operator.team_id %>
                      <%= link_to "Aprovar/Recusar", gestao_quality_case_path(quality_case), 
                                 class: "text-sm font-medium text-orange-600 hover:text-orange-800" %>
                    <% end %>
                  <% when "Aguardando retorno ao cliente" %>
                    <%= link_to "Retorno Cliente", retorno_cliente_quality_case_path(quality_case), 
                               class: "text-sm font-medium text-teal-600 hover:text-teal-800" %>
                  <% when "Recusada pelo Gestor" %>
                    <%= link_to "Reanalisar/Manter", pos_recusa_quality_case_path(quality_case), 
                               class: "text-sm font-medium text-red-600 hover:text-red-800" %>
                  <% end %>
                  <%= link_to "Detalhes", quality_case_path(quality_case), 
                             class: "text-sm font-medium text-gray-600 hover:text-blue-600" %>
              </div>
            </div>
          <% end %>
        </div>
      </div>
    </section>


  </main>
</div>

<script>
// Timer simples com JavaScript vanilla
function updateTimers() {
  document.querySelectorAll('.timer-element').forEach(element => {
    const startTime = parseInt(element.dataset.startTime);
    if (startTime) {
      const now = Math.floor(Date.now() / 1000);
      const elapsed = now - startTime;
      
      const hours = Math.floor(elapsed / 3600);
      const minutes = Math.floor((elapsed % 3600) / 60);
      const seconds = elapsed % 60;
      
      const timeText = `${hours.toString().padStart(2, '0')}:${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`;
      element.textContent = `⏱ ${timeText}`;
      
      // Mudar cor baseado no tempo
      if (elapsed > 1800) {
        // Vermelho se passou de 30 minutos
        element.className = element.className.replace(/bg-yellow-100|bg-amber-100|bg-green-100|text-yellow-700|text-amber-700|text-green-700/g, '');
        element.className += ' bg-red-100 text-red-700';
      } else {
        // Verde se abaixo de 30 minutos
        element.className = element.className.replace(/bg-yellow-100|bg-amber-100|bg-red-100|text-yellow-700|text-amber-700|text-red-700/g, '');
        element.className += ' bg-green-100 text-green-700';
      }
    }
  });
  
  // Atualizar cores dos containers de status
  document.querySelectorAll('.status-container').forEach(container => {
    const startTime = parseInt(container.dataset.startTime);
    const statusText = container.querySelector('.status-text');
    
    if (startTime && statusText) {
      const now = Math.floor(Date.now() / 1000);
      const elapsed = now - startTime;
      
      if (elapsed > 1800) {
        // Vermelho se passou de 30 minutos
        container.className = 'bg-red-100 border-2 border-red-700 rounded px-2 py-2 w-36 h-8 flex items-center justify-center status-container';
        statusText.className = 'text-xs text-red-700 status-text';
      } else {
        // Verde se abaixo de 30 minutos
        container.className = 'bg-green-100 border-2 border-green-700 rounded px-2 py-2 w-36 h-8 flex items-center justify-center status-container';
        statusText.className = 'text-xs text-green-700 status-text';
      }
    }
  });
}

// Atualizar timers a cada segundo
setInterval(updateTimers, 1000);

// Executar imediatamente
updateTimers();
</script>

